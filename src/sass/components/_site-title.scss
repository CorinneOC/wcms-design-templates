// Rules to handle website titles of various lengths

.site-name h1,
.site-name p {
  margin-top: 0;
  margin-bottom: 0;
}

.site-name a {
  padding:0;
  @include fontSize(28);
  text-transform:uppercase;
  display: inline-block;
  color:$brand-primary-blue;
  text-decoration:none;
  line-height:100%;
  font-weight: 100;
  margin-top: 15px;
  @include media($tablet) {
    @include fontSize(46);
  }
}


$titles: (
  small: (
    size: 30px,
    margin-top: 4px,
    width: inherit
  ),
  large: (
    size: 40px,
    margin-top: 18px,
    width: inherit
  ),
  xlarge: (
    size: 44px,
    margin-top: 15px,
    width: inherit
  ),
  standard: (
    size: 46px,
    margin-top: 14px,
    width: inherit
  ),
  short: (
    size: 40px,
    margin-top: 18px,
    width: inherit
  ),
  medium: (
    size: 34px,
    margin-top: 18px,
    width: inherit
  ),
  long: (
    size: 32px,
    margin-top: 18px,
    width: 100%
  ),
  extra-long: (
    size: 32px,
    margin-top: 8px,
    width: 76%
  ),
  super-long: (
    size: 30px,
    margin-top: 10px,
    width: 85%
  ),
  mega-long: (
    size: 28px,
    margin-top: 12px,
    width: 80%
  )
);


@include media($tablet) {
  // Loop over the mapped classes
  // and output a rule for each one.
  @each $title, $i in $titles {
      .title-#{nth($title, 1)} a {
          font-size: #{map-get($i, size)};
          margin-top: #{map-get($i, margin-top)};
          width: #{map-get($i, width)};
      }
  }

}
